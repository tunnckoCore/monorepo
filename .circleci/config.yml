# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1

references:
  node-8: &node-8
    working_directory: ~/tunnckocore-monorepo
    docker:
      - image: circleci/node:8
  node-10: &node-10
    working_directory: ~/tunnckocore-monorepo
    docker:
      - image: circleci/node:10
  restore-cache: &restore-cache
      keys:
        - v1-monorepo-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
        - v1-monorepo-{{ checksum "yarn.lock" }}
        - v1-monorepo-
  save-cache: &save-cache
    key: v1-monorepo-{{ checksum "yarn.lock" }}-{{ checksum ".circleci/config.yml" }}
    paths:
      - ~/.cache/yarn
      - ~/.cache/yarn-packages-cache
      - node_modules
  attach-ws: &attach-ws
    at: ~/tunnckocore-monorepo
  yarn: &yarn
    name: Install Dependencies
    command: yarn install --prefer-offline || yarn install
  test: &test
    # TODO: remove the `--all` flag
    name: Run Tests
    command: yarn run test --coverage --all
  lint: &lint
    # TODO: remove the `--all` flag
    name: Lint Packages
    command: yarn run lint --all
  git: &git
    name: Configure git settings
    command: |-
      git config --global user.email "mameto2011@gmail.com"
      git config --global user.name "Charlike Mike Reagent"
      # git config --global user.signingkey $GIT_SIGNING_KEY
      # git config --global commit.gpgsign true
  npm: &npm
    name: Configure npm settings
    command: |-
      echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > ./.npmrc

jobs:
  install:
    <<: *node-8
    steps:
      - checkout
      - restore_cache: *restore-cache
      - run: *yarn
      - save_cache: *save-cache
      - persist_to_workspace:
          root: .
          paths:
            - .
  test-node-8:
    <<: *node-8
    steps:
      - attach_workspace: *attach-ws
      - run: *test
  test-node-10:
    <<: *node-10
    steps:
      - attach_workspace: *attach-ws
      - run: *test
      - run:
          name: Send CodeCov Results
          command: bash <(curl -s https://codecov.io/bash)
  lint:
    <<: *node-10
    steps:
      - attach_workspace: *attach-ws
      - run: *lint
  typecheck:
    <<: *node-10
    steps:
      - attach_workspace: *attach-ws
      - run:
          name: Type checking with TypeScript
          command: yarn run tscheck
  build:
    <<: *node-10
    steps:
      - attach_workspace: *attach-ws
      - run: # TODO: use jest-runner-babel soon, instead of lerna exec --parallel
          name: Build production files
          command: yarn run build
  deploy:
    <<: *node-10
    steps:
      - attach_workspace: *attach-ws
      - add_ssh_keys: # User machine's key fingerprint (CircleCI User Key)
          fingerprints:
            - "b0:65:c7:60:ea:53:44:5e:86:a5:16:0f:e8:0d:42:cc"
      - run: *git
      - run: *npm
      - run:
          name: Disable SSH Strict Check on GitHub hosts
          command: |-
            mkdir -p ~/.ssh
            echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      # - run:
      #     name: Configure SSH Known Hosts
      #     command: |-
      #       echo 'github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==' > ~/.ssh/known_hosts
      - run:
          name: Publish to npm and GitHub
          command: yarn run release --canary --dist-tag beta-foo --yes major


workflows:
  version: 2
  automation:
    jobs:
      #                    typecheck
      # install -> lint -> test node 8  -> build -> deploy (only on master)
      #                    test node 10
      - install
      - lint:
          requires:
            - install
      - typecheck:
          requires:
            - lint
      - test-node-8:
          requires:
            - lint
      - test-node-10:
          requires:
            - lint
      - build:
          requires:
            - typecheck
            - test-node-8
            - test-node-10
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master
